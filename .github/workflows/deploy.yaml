name: Build and Deploy to GKE

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Authenticate with Google Cloud using the service account key
    - name: Validate JSON file
      run: |
        echo "${{ secrets.GCP_SA_KEY }}" > "${HOME}/gcloud-service-key.json"

        # Check if the file is a valid JSON file
        if jq empty "${HOME}/gcloud-service-key.json" > /dev/null 2>&1; then
          echo "TRUE"
        else
          echo "FALSE"
        fi
    
    # Step 3: Set the project ID for subsequent Google Cloud commands
    - name: Set project ID
      run: | 
        gcloud config set project ${{ secrets.PROJECT_ID }}

    # Step 4: Get GKE Credentials for kubectl
    - name: Get GKE Credentials
      uses: google-github-actions/get-gke-credentials@v1
      with:
        cluster_name: ${{ secrets.CLUSTER_NAME }}  # Replace with your GKE cluster name
        location: ${{ secrets.ZONE }}  # Replace with your GKE cluster zone or region
        project_id: ${{ secrets.PROJECT_ID }}  # Explicitly specify the project ID

    # Step 5: Verify Kubernetes Cluster connection
    - name: Verify Kubernetes Cluster
      run: |
        kubectl get nodes

    # # Step 4: Authenticate Docker to Docker Hub (instead of GCR)
    # - name: Authenticate Docker to Docker Hub
    #   run: |
    #     echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin


    # # Step 5: Build and push Docker image to Docker Hub
    # - name: Build and push Docker image
    #   run: |
    #     IMAGE=docker.io/${{ secrets.DOCKER_USERNAME }}/hello-world-node:latest
    #     docker build -t $IMAGE .
    #     docker push $IMAGE

    # # Step 6: Install and configure kubectl using gcloud
    # - name: Install and configure kubectl
    #   run: |
    #     gcloud components install kubectl
    #     gcloud container clusters get-credentials ${{ secrets.CLUSTER_NAME }} --zone ${{ secrets.ZONE }} --project ${{ secrets.PROJECT_ID }}

    # Step 6: Get GKE credentials and deploy to GKE
    #- name: Get GKE credentials
    #  run: |
    #    gcloud container clusters get-credentials ${{ secrets.CLUSTER_NAME }} --zone ${{ secrets.ZONE }} --project ${{ secrets.PROJECT_ID }}

    # Step 7: Update the Kubernetes deployment with the new Docker image
    #- name: Deploy to GKE
    #  run: |
    #    kubectl set image deployment/YOUR_DEPLOYMENT_NAME YOUR_CONTAINER_NAME=docker.io/YOUR_USERNAME/YOUR_APP_NAME:latest
    #    kubectl rollout status deployment/YOUR_DEPLOYMENT_NAME
